name: $(majorMinorPatchVersion)$(tag)$(semanticVersion) # $(rev:r) # NOTE: rev resets when the default retention period expires

trigger: 
  branches:
    include: 
    - develop
    - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  semanticVersion: $[counter(variables['majorMinorPatchVersion'], 0)]
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    tag: '-'
  ${{ else }}:
    tag: '-develop.'
  solution: '**/*.sln'
  buildConfiguration: 'Release'
  majorMinorPatchVersion: 0.1.0 # has to be the same in all pipelines

steps:

#-------------------------------
# Build libraries
#-------------------------------


- task: DotNetCoreCLI@2
  displayName: Dotnet Restore
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'
    verbosityRestore: 'Normal'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Dotnet Build
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

#-------------------------------
# Check code styles 
#-------------------------------

#-------------------------------
# Run tests
#-------------------------------

- task: DotNetCoreCLI@2
  displayName: Dotnet Run UnitTests
  inputs:
    command: test
    projects: '**/*Test.csproj'
    arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage" '

- script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.19'  
  displayName: 'Install ReportGenerator Tool'
  
- script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'  
  displayName: 'Create Code Coverage Reports'  
  
# Publish code coverage report to the pipeline
- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage'
  inputs:
    codeCoverageTool: Cobertura  
    summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'  
    
#-------------------------------
# Create executable package 
#-------------------------------

